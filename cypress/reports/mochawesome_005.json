{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-09-18T04:08:24.856Z",
    "end": "2025-09-18T04:08:25.103Z",
    "duration": 247,
    "testsRegistered": 7,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "d8f7ba86-691b-409a-95dc-bb386b84844b",
      "title": "",
      "fullFile": "cypress\\e2e\\saucedemo\\network.cy.js",
      "file": "cypress\\e2e\\saucedemo\\network.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9cb170c7-5b16-4563-a6eb-518f8e601658",
          "title": "Notes API Tests with Fixtures",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should register a new user",
              "fullTitle": "Notes API Tests with Fixtures Should register a new user",
              "timedOut": null,
              "duration": 201,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `${baseUrl}/users/register`,\n  form: true,\n  body: {\n    name: testUser.name,\n    email: testUser.email,\n    password: testUser.password\n  }\n}).then(res => {\n  expect(res.status).to.eq(201);\n  expect(res.body.success).to.be.true;\n  expect(res.body.data).to.have.property('email', testUser.email);\n});",
              "err": {
                "message": "Error: A fixture file could not be found at any of the following paths:\n\n    > cypress\\fixtures\\users\n    > cypress\\fixtures\\users.[ext]\n\nCypress looked for these file extensions at the provided path:\n\n    > .json, .js, .coffee, .html, .txt, .csv, .png, .jpg, .jpeg, .gif, .tif, .tiff, .zip\n\nProvide a path to an existing fixture file.\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Notes API Tests with Fixtures`",
                "estack": "Error: A fixture file could not be found at any of the following paths:\n\n    > cypress\\fixtures\\users\n    > cypress\\fixtures\\users.[ext]\n\nCypress looked for these file extensions at the provided path:\n\n    > .json, .js, .coffee, .html, .txt, .csv, .png, .jpg, .jpeg, .gif, .tif, .tiff, .zip\n\nProvide a path to an existing fixture file.\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Notes API Tests with Fixtures`\n    at Object.<anonymous> (<embedded>:2521:229137)\n    at Object.tryCatcher (C:\\Users\\Ascendion\\AppData\\Local\\Cypress\\Cache\\15.2.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\util.js:16:23)\n    at Promise._settlePromiseFromHandler (C:\\Users\\Ascendion\\AppData\\Local\\Cypress\\Cache\\15.2.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\promise.js:512:31)\n    at Promise._settlePromise (C:\\Users\\Ascendion\\AppData\\Local\\Cypress\\Cache\\15.2.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\promise.js:569:18)\n    at Promise._settlePromise0 (C:\\Users\\Ascendion\\AppData\\Local\\Cypress\\Cache\\15.2.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\promise.js:614:10)\n    at Promise._settlePromises (C:\\Users\\Ascendion\\AppData\\Local\\Cypress\\Cache\\15.2.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\promise.js:694:18)\n    at Promise._fulfill (C:\\Users\\Ascendion\\AppData\\Local\\Cypress\\Cache\\15.2.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\promise.js:638:18)\n    at <unknown> (C:\\Users\\Ascendion\\AppData\\Local\\Cypress\\Cache\\15.2.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\nodeback.js:42:21)\n    at s (<embedded>:227:108639)\n    at D.<anonymous> (<embedded>:2515:171807)\n    at D.emit (node:events:518:28)\n    at D._finish (<embedded>:2515:172737)\n    at i (<embedded>:2515:172128)\n    at D._processSimple2 (<embedded>:2515:177894)\n    at <unknown> (<embedded>:2515:177747)\n    at D._stat2 (<embedded>:2515:178812)\n    at <unknown> (<embedded>:2515:178659)\n    at s (<embedded>:1072:27266)\n    at s (<embedded>:227:108639)\n    at r (<embedded>:2586:13648)\n    at FSReqCallback.oncomplete (node:fs:198:21)",
                "diff": null
              },
              "uuid": "f1b12ca3-3e94-4a2f-9fee-750e9860dd18",
              "parentUUID": "9cb170c7-5b16-4563-a6eb-518f8e601658",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should login with registered user",
              "fullTitle": "Notes API Tests with Fixtures Should login with registered user",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `${baseUrl}/users/login`,\n  form: true,\n  body: {\n    email: testUser.email,\n    password: testUser.password\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.success).to.be.true;\n  authToken = res.body.data.token;\n  expect(authToken).to.not.be.empty;\n});",
              "err": {},
              "uuid": "b633834d-8205-4d77-a640-ef5ab259fdf6",
              "parentUUID": "9cb170c7-5b16-4563-a6eb-518f8e601658",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should create a new note",
              "fullTitle": "Notes API Tests with Fixtures Should create a new note",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `${baseUrl}/notes`,\n  form: true,\n  headers: {\n    'x-auth-token': authToken\n  },\n  body: testNote\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.success).to.be.true;\n  expect(res.body.data.title).to.eq(testNote.title);\n  noteId = res.body.data.id;\n});",
              "err": {},
              "uuid": "d0ef5261-30bb-4035-9bc9-6dec6e469448",
              "parentUUID": "9cb170c7-5b16-4563-a6eb-518f8e601658",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should fetch all notes",
              "fullTitle": "Notes API Tests with Fixtures Should fetch all notes",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${baseUrl}/notes`,\n  headers: {\n    'x-auth-token': authToken\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.success).to.be.true;\n  expect(res.body.data.length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "3d93da47-8709-49a2-83a2-50bd1154812e",
              "parentUUID": "9cb170c7-5b16-4563-a6eb-518f8e601658",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should update the note",
              "fullTitle": "Notes API Tests with Fixtures Should update the note",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: `${baseUrl}/notes/${noteId}`,\n  form: true,\n  headers: {\n    'x-auth-token': authToken\n  },\n  body: {\n    title: 'Updated Title',\n    description: 'Updated Description',\n    category: 'Work',\n    completed: true\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.data.title).to.eq('Updated Title');\n  expect(res.body.data.completed).to.be.true;\n});",
              "err": {},
              "uuid": "2dd24f06-420d-4b27-8660-d910736ee2da",
              "parentUUID": "9cb170c7-5b16-4563-a6eb-518f8e601658",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should delete the note",
              "fullTitle": "Notes API Tests with Fixtures Should delete the note",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/notes/${noteId}`,\n  headers: {\n    'x-auth-token': authToken\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.success).to.be.true;\n});",
              "err": {},
              "uuid": "aefae048-d171-47a4-8b8a-7be053ed5da4",
              "parentUUID": "9cb170c7-5b16-4563-a6eb-518f8e601658",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should logout the user",
              "fullTitle": "Notes API Tests with Fixtures Should logout the user",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/users/logout`,\n  headers: {\n    'x-auth-token': authToken\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.success).to.be.true;\n});",
              "err": {},
              "uuid": "0f6e1440-7c8b-4b2d-8ba5-de1111448dbf",
              "parentUUID": "9cb170c7-5b16-4563-a6eb-518f8e601658",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f1b12ca3-3e94-4a2f-9fee-750e9860dd18"
          ],
          "pending": [],
          "skipped": [
            "b633834d-8205-4d77-a640-ef5ab259fdf6",
            "d0ef5261-30bb-4035-9bc9-6dec6e469448",
            "3d93da47-8709-49a2-83a2-50bd1154812e",
            "2dd24f06-420d-4b27-8660-d910736ee2da",
            "aefae048-d171-47a4-8b8a-7be053ed5da4",
            "0f6e1440-7c8b-4b2d-8ba5-de1111448dbf"
          ],
          "duration": 201,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}