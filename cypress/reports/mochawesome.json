{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-18T04:06:56.934Z",
    "end": "2025-09-18T04:07:15.445Z",
    "duration": 18511,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1ceb109a-495d-4341-beed-7cddcc42ea42",
      "title": "",
      "fullFile": "cypress\\e2e\\saucedemo\\CommandsTrial.cy.js",
      "file": "cypress\\e2e\\saucedemo\\CommandsTrial.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4b7c7085-ea47-4c29-8ec8-6deac88168e6",
          "title": "SauceDemo Tests for Multiple Users",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "runs tests for each user in users.json",
              "fullTitle": "SauceDemo Tests for Multiple Users runs tests for each user in users.json",
              "timedOut": null,
              "duration": 15854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('test_users').then(users => {\n  cy.task('log', users); // ðŸ‘ˆ Will print in GitHub Actions logs\n  expect(users).to.exist;\n  users.forEach((user, index) => {\n    if (index > 0) {\n      // Clear cookies, localStorage, and reload to start fresh\n      cy.clearCookies();\n      cy.clearLocalStorage();\n      // cy.reload(true);\n    }\n    cy.log(`Running tests for ${user.username}`);\n    cy.visit('https://www.saucedemo.com/');\n    cy.login(user.username, user.password);\n    cy.wait(2000);\n    cy.url().should('satisfy', url => {\n      return url.includes('/inventory.html') || url === 'https://www.saucedemo.com/';\n    });\n    cy.url().then(url => {\n      if (url.includes('/inventory.html')) {\n        // Login successful, proceed with cart actions\n        cy.addItemToCart('Sauce Labs Backpack');\n        cy.addItemToCart('Sauce Labs Bike Light');\n        cy.get('.shopping_cart_badge').should('contain', '2');\n        cy.wait(2000);\n        cy.removeItemFromCart('Sauce Labs Backpack');\n        cy.get('.shopping_cart_badge').should('contain', '1');\n      }\n    });\n    cy.url().then(url => {\n      if (url === 'https://www.saucedemo.com/') {\n        // Login failed, assert error message\n        cy.get('[data-test=\"error\"]').should('be.visible');\n        cy.log(`Login failed for ${user.username}`);\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "34e479fc-e64c-45b9-a45d-f3c1429a9a26",
              "parentUUID": "4b7c7085-ea47-4c29-8ec8-6deac88168e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34e479fc-e64c-45b9-a45d-f3c1429a9a26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15854,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}